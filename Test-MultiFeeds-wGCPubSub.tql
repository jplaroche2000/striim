
CREATE APPLICATION StriimToKafkaWithGCP;

CREATE OR REPLACE SOURCE oracle_database_11_2_0_2_xe USING OracleReader  ( 
Compression: false,
  StartTimestamp: 'null',
  SupportPDB: false,
  TransactionBufferDiskLocation: '.striim/LargeBuffer',
  FetchSize: 1,
  DDLCaptureMode: 'All',
  QuiesceMarkerTable: 'QUIESCEMARKER',
  CommittedTransactions: true,
  QueueSize: 2048,
  FilterTransactionBoundaries: true,
  SendBeforeImage: true,
  XstreamTimeOut: 600,
  ConnectionURL: 'striim_kafka_oracle-database:1521:XE',
  Tables: 'SCOTT.ADDRESS;SCOTT.ADDRESS_LINK;SCOTT.CUSTOMER;SCOTT.CUSTOMER_ORDER;SCOTT.CUSTOMER_ORDER_ITEM',
  adapterName: 'OracleReader',
  TransactionBufferType: 'Memory',
  DictionaryMode: 'OnlineCatalog',
  connectionRetryPolicy: 'timeOut=30, retryInterval=30, maxRetries=3',
  StartSCN: 'null',
  ReaderType: 'LogMiner',
  Username: 'scott',
  TransactionBufferSpilloverSize: '1MB',
  OutboundServerProcessName: 'WebActionXStream',
  Password: 'tiger',
  Password_encrypted: 'false' ) 
OUTPUT TO PosDataStream  ;

CREATE OR REPLACE TARGET FileWriter USING Global.FileWriter  ( 
filename: 'out.txt',
  rolloveronddl: 'true',
  rolloverpolicy: 'EventCount:10000,Interval:30s',
  flushpolicy: 'EventCount:10000,Interval:30s',
  encryptionpolicy: '',
  DataEncryptionKeyPassphrase: '' ) 
FORMAT USING Global.JSONFormatter  ( jsonobjectdelimiter: '\n',
  jsonMemberDelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.PosDataStream;

CREATE OR REPLACE TARGET GCPPubSub USING Global.GooglePubSubWriter  ( 
PubSubConfig: 'RetryDelay:5,MaxRetryDelay:600,TotalTimeout:10,InitialRpcTimeout:10,MaxRpcTimeout:10,RetryDelayMultiplier:2.0,NumThreads:10,MaxOutstandingElementCount:1000,MaxOutstandingRequestBytes:1000000',
  BatchPolicy: 'EventCount:1000,Interval:1m,Size:1000000',
  ProjectId: 'superb-reporter-256719',
  adapterName: 'GooglePubSubWriter',
  Topic: 'test',
  ServiceAccountKey: '/opt/striim/superb-reporter-256719-8b0fcb2c76ea.json' ) 
FORMAT USING Global.JSONFormatter  ( handler: 'com.webaction.proc.JSONFormatter',
  formatterName: 'JSONFormatter',
  jsonMemberDelimiter: '\n',
  jsonobjectdelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.PosDataStream;

CREATE OR REPLACE TARGET KafkaBucket USING Global.KafkaWriter VERSION '2.1.0' ( 
KafkaConfigPropertySeparator: ';',
  Mode: 'Sync',
  adapterName: 'KafkaWriter',
  MessageHeader: '',
  Topic: 'bucket',
  brokerAddress: 'zoo1:9092',
  KafkaConfigValueSeparator: '=',
  KafkaConfig: 'request.timeout.ms=60001;session.timeout.ms=60000' ) 
FORMAT USING Global.JSONFormatter  ( handler: 'com.webaction.proc.JSONFormatter',
  formatterName: 'JSONFormatter',
  jsonMemberDelimiter: '\n',
  jsonobjectdelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.PosDataStream;

CREATE OR REPLACE CQ CQ_CUSTOMER_ORDER INSERT INTO admin.Kafka_Input_Topic_CustomerOrder SELECT * FROM PosDataStream p WHERE META(p, "TableName").toString() == 'SCOTT.CUSTOMER_ORDER';

CREATE OR REPLACE TARGET KafkaCustomerOrder USING Global.KafkaWriter VERSION '2.1.0' ( 
KafkaConfigPropertySeparator: ';',
  Mode: 'Sync',
  adapterName: 'KafkaWriter',
  MessageHeader: '',
  Topic: 'customer_order',
  brokerAddress: 'zoo1:9092',
  KafkaConfigValueSeparator: '=',
  KafkaConfig: 'request.timeout.ms=60001;session.timeout.ms=60000' ) 
FORMAT USING Global.JSONFormatter  ( handler: 'com.webaction.proc.JSONFormatter',
  formatterName: 'JSONFormatter',
  jsonMemberDelimiter: '\n',
  jsonobjectdelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.Kafka_Input_Topic_CustomerOrder;

CREATE OR REPLACE CQ CQ_CUSTOMER_ORDER_ITEM INSERT INTO admin.Kafka_Input_Topic_CustomerOrderItem SELECT * FROM PosDataStream p WHERE META(p, "TableName").toString() == 'SCOTT.CUSTOMER_ORDER_ITEM';

CREATE OR REPLACE TARGET KafkaCustomerOrderItem USING Global.KafkaWriter VERSION '2.1.0' ( 
KafkaConfigPropertySeparator: ';',
  Mode: 'Sync',
  adapterName: 'KafkaWriter',
  MessageHeader: '',
  Topic: 'customer_order_item',
  brokerAddress: 'zoo1:9092',
  KafkaConfigValueSeparator: '=',
  KafkaConfig: 'request.timeout.ms=60001;session.timeout.ms=60000' ) 
FORMAT USING Global.JSONFormatter  ( handler: 'com.webaction.proc.JSONFormatter',
  formatterName: 'JSONFormatter',
  jsonMemberDelimiter: '\n',
  jsonobjectdelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.Kafka_Input_Topic_CustomerOrderItem;

CREATE OR REPLACE CQ CQ_ADDRESS INSERT INTO admin.Kafka_Input_Topic_Address SELECT * FROM PosDataStream p WHERE META(p, "TableName").toString() == 'SCOTT.ADDRESS';

CREATE OR REPLACE TARGET KafkaAddress USING Global.KafkaWriter VERSION '2.1.0' ( 
KafkaConfigPropertySeparator: ';',
  Mode: 'Sync',
  adapterName: 'KafkaWriter',
  MessageHeader: '',
  Topic: 'address',
  brokerAddress: 'zoo1:9092',
  KafkaConfigValueSeparator: '=',
  KafkaConfig: 'request.timeout.ms=60001;session.timeout.ms=60000' ) 
FORMAT USING Global.JSONFormatter  ( handler: 'com.webaction.proc.JSONFormatter',
  formatterName: 'JSONFormatter',
  jsonMemberDelimiter: '\n',
  jsonobjectdelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.Kafka_Input_Topic_Address;

CREATE OR REPLACE CQ CQ_ADDRESS_LINK INSERT INTO admin.Kafka_Input_Topic_AddressLink SELECT * FROM PosDataStream p WHERE META(p, "TableName").toString() == 'SCOTT.ADDRESS_LINK';

CREATE OR REPLACE TARGET KafkaAddressLink USING Global.KafkaWriter VERSION '2.1.0' ( 
KafkaConfigPropertySeparator: ';',
  Mode: 'Sync',
  adapterName: 'KafkaWriter',
  MessageHeader: '',
  Topic: 'address_link',
  brokerAddress: 'zoo1:9092',
  KafkaConfigValueSeparator: '=',
  KafkaConfig: 'request.timeout.ms=60001;session.timeout.ms=60000' ) 
FORMAT USING Global.JSONFormatter  ( handler: 'com.webaction.proc.JSONFormatter',
  formatterName: 'JSONFormatter',
  jsonMemberDelimiter: '\n',
  jsonobjectdelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.Kafka_Input_Topic_AddressLink;

CREATE OR REPLACE CQ CQ_CUSTOMER INSERT INTO admin.Kafka_Input_Topic_Customer SELECT * FROM PosDataStream p WHERE META(p, "TableName").toString() == 'SCOTT.CUSTOMER';

CREATE OR REPLACE TARGET KafkaCustomer USING Global.KafkaWriter VERSION '2.1.0' ( 
KafkaConfigPropertySeparator: ';',
  Mode: 'Sync',
  adapterName: 'KafkaWriter',
  MessageHeader: '',
  Topic: 'customer',
  brokerAddress: 'zoo1:9092',
  KafkaConfigValueSeparator: '=',
  KafkaConfig: 'request.timeout.ms=60001;session.timeout.ms=60000' ) 
FORMAT USING Global.JSONFormatter  ( handler: 'com.webaction.proc.JSONFormatter',
  formatterName: 'JSONFormatter',
  jsonMemberDelimiter: '\n',
  jsonobjectdelimiter: '\n',
  EventsAsArrayOfJsonObjects: 'true' ) 
INPUT FROM admin.Kafka_Input_Topic_Customer;

END APPLICATION StriimToKafkaWithGCP;

